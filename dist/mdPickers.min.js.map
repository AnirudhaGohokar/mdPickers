{"version":3,"sources":["mdPickers.min.js"],"names":["configIcons","$mdIconProvider","mdpIconsRegistry","angular","forEach","icon","index","id","url","runBlock","$templateCache","put","svg","$inject","module","config","run","constant","ngMessage","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","directive","ClockCtrl","$scope","getPointerStyle","divider","vm","type","TYPE_HOURS","TYPE_MINUTES","isNumber","minutesSteps","selected","getClosestStep","degrees","Math","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","format","hours","minutes","init","i","steps","push","this","STEP_DEG","CLOCK_TYPES","range","controller","TimePickerCtrl","$mdDialog","options","$mdMedia","switchView","currentView","VIEW_HOURS","VIEW_MINUTES","setAM","hour","setPM","cancel","confirm","hide","toDate","moment","labels","autoSwitch","autoClose","clockHours","parseInt","clockMinutes","mdpClock","$animate","$timeout","$$rAF","$window","linkFn","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","isMinutesPicker","shouldClose","isClickOrUp","indexOf","on","e","off","$on","bindToController","replace","templateUrl","controllerAs","link","mdpTimePicker","$mdpTimePicker","ngModel","$transclude","showPicker","ev","$modelValue","targetEvent","then","$setViewValue","timeFormat","$render","require","updateInputElement","value","$valid","inputElement","size","length","inputContainerCtrl","setHasValue","$isEmpty","updateTime","isDate","isMoment","dateFormat","$pristine","messages","hasClass","removeClass","onInputElementEvents","target","$viewValue","clone","append","isDefined","disabled","hasOwnProperty","$watch","$error","newValue","oldValue","setInvalid","Object","keys","$formatters","unshift","isValid","$setValidity","$validators","modelValue","viewValue","$parsers","parsed","originalModel","seconds","transclude","template","noFloat","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","Date","now","isObject","ok","show","clickOutsideToClose","locals","skipHide","provider","CalendarCtrl","self","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","date","firstDay","day","arr","enabled","isDayEnabled","minDate","maxDate","dateFilter","selectDate","dom","nextMonth","add","prevMonth","subtract","updateDaysInMonth","unix","DatePickerCtrl","currentDate","displayFormat","isFunction","selectingYear","isBefore","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","mdpCalendar","animElements","map","a","direction","addClass","mdpDatePicker","$mdpDatePicker","mdpDatePickerService","applyValue","formatValidator","minDateValidator","maxDateValidator","filter","filterValidator","required","requiredValidator","postLink","updateView","$validate","updateDate","model","isError","$invalid","localValue","copy","month","post","DISPLAY_FORMAT","setDisplayFormat","datePicker","isSameOrAfter","isSameOrBefore","undefined","service","factory"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n(function() {\r\n    'use strict';\r\n\r\n    configIcons.$inject = [\"$mdIconProvider\", \"mdpIconsRegistry\"];\r\n    runBlock.$inject = [\"$templateCache\", \"mdpIconsRegistry\"];\r\n    angular\r\n        .module('mdPickers', [\r\n            'ngMaterial',\r\n            'ngAnimate',\r\n            'ngAria'\r\n        ])\r\n        .config(configIcons)\r\n        .run(runBlock);\r\n\r\n    /** @ngInject */\r\n    function configIcons($mdIconProvider, mdpIconsRegistry) {\r\n        angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n            $mdIconProvider.icon(icon.id, icon.url);\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function runBlock($templateCache, mdpIconsRegistry) {\r\n        angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n            $templateCache.put(icon.url, icon.svg);\r\n        });\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .constant('mdpIconsRegistry', [{\r\n            id: 'mdp-chevron-left',\r\n            url: 'mdp-chevron-left.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }, {\r\n            id: 'mdp-chevron-right',\r\n            url: 'mdp-chevron-right.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }, {\r\n            id: 'mdp-access-time',\r\n            url: 'mdp-access-time.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n        }, {\r\n            id: 'mdp-event',\r\n            url: 'mdp-event.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }]);\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    ngMessage.$inject = [\"$mdUtil\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('ngMessage', ngMessage);\r\n\r\n    /** @ngInject */\r\n    function ngMessage($mdUtil) {\r\n        return {\r\n            restrict: 'EA',\r\n            priority: 101,\r\n            compile: function(element) {\r\n                var inputContainer = $mdUtil.getClosest(element, 'mdp-time-picker', true) ||\r\n                    $mdUtil.getClosest(element, 'mdp-date-picker', true);\r\n\r\n                // If we are not a child of an input container, don't do anything\r\n                if (!inputContainer) return;\r\n\r\n                // Add our animation class\r\n                element.toggleClass('md-input-message-animation', true);\r\n\r\n                return {};\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    ClockCtrl.$inject = [\"$scope\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('ClockCtrl', ClockCtrl);\r\n\r\n    /** @ngInject */\r\n    function ClockCtrl($scope) {\r\n        var vm = this;\r\n\r\n        var TYPE_HOURS = 'hours';\r\n        var TYPE_MINUTES = 'minutes';\r\n\r\n        vm.STEP_DEG = 360 / 12;\r\n        vm.steps = [];\r\n        vm.CLOCK_TYPES = {\r\n            hours: {\r\n                range: 12,\r\n            },\r\n            minutes: {\r\n                range: 60,\r\n            }\r\n        };\r\n\r\n        vm.getPointerStyle = getPointerStyle;\r\n        vm.setTimeByDeg = setTimeByDeg;\r\n        vm.setTime = setTime;\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function getPointerStyle() {\r\n            var divider = 1;\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    divider = 12;\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    divider = 60;\r\n                    break;\r\n            }\r\n\r\n            if (angular.isNumber(vm.minutesSteps) && vm.type === TYPE_MINUTES) {\r\n                vm.selected = getClosestStep(vm.selected);\r\n            }\r\n\r\n            var degrees = Math.round(vm.selected * (360 / divider)) - 180;\r\n\r\n            return {\r\n                '-webkit-transform': 'rotate(' + degrees + 'deg)',\r\n                '-ms-transform': 'rotate(' + degrees + 'deg)',\r\n                'transform': 'rotate(' + degrees + 'deg)'\r\n            }\r\n        }\r\n\r\n        function setTimeByDeg(deg) {\r\n            deg = deg >= 360 ? 0 : deg;\r\n            var divider = 0;\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    divider = 12;\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    divider = 60;\r\n                    break;\r\n            }\r\n\r\n            vm.setTime(\r\n                Math.round(divider / 360 * deg)\r\n            );\r\n        }\r\n\r\n        function getClosestStep (time) {\r\n            return Math.round(time / vm.minutesSteps) * vm.minutesSteps;\r\n        }\r\n\r\n        function setTime(time, type) {\r\n            vm.selected = time;\r\n\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    if (vm.time.format('A') == 'PM') time += 12;\r\n                    vm.time.hours(time);\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    if (angular.isNumber(vm.minutesSteps)) {\r\n                        time = getClosestStep(time);\r\n                    }\r\n                    if (time > 59) time -= 60;\r\n                    vm.time.minutes(time);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function init() {\r\n            vm.type = vm.type || 'hours';\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    for (var i = 1; i <= 12; i++)\r\n                        vm.steps.push(i);\r\n                    vm.selected = vm.time.hours() || 0;\r\n                    if (vm.selected > 12) vm.selected -= 12;\r\n\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    for (var i = 5; i <= 55; i += 5)\r\n                        vm.steps.push(i);\r\n                    vm.steps.push(0);\r\n                    vm.selected = vm.time.minutes() || 0;\r\n\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    TimePickerCtrl.$inject = [\"$scope\", \"$mdDialog\", \"time\", \"options\", \"$mdMedia\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('TimePickerCtrl', TimePickerCtrl);\r\n\r\n    /** @ngInject */\r\n    function TimePickerCtrl($scope, $mdDialog, time, options, $mdMedia) {\r\n        var vm = this;\r\n\r\n        vm.VIEW_HOURS = 1;\r\n        vm.VIEW_MINUTES = 2;\r\n        vm.currentView = vm.VIEW_HOURS;\r\n        vm.time = moment(time);\r\n        vm.labels = options.labels;\r\n        vm.autoSwitch = !!options.autoSwitch;\r\n        vm.autoClose = !!options.autoClose;\r\n        vm.minutesSteps = options.minutesSteps || null;\r\n\r\n        vm.clockHours = parseInt(vm.time.format(\"h\"));\r\n        vm.clockMinutes = parseInt(vm.time.minutes());\r\n\r\n        vm.switchView = switchView;\r\n        vm.setAM = setAM;\r\n        vm.setPM = setPM;\r\n        vm.cancel = cancel;\r\n        vm.confirm = confirm;\r\n\r\n        $scope.$mdMedia = $mdMedia;\r\n\r\n        function switchView() {\r\n            vm.currentView = vm.currentView == vm.VIEW_HOURS ? vm.VIEW_MINUTES : vm.VIEW_HOURS;\r\n        }\r\n\r\n        function setAM() {\r\n            if (vm.time.hours() >= 12)\r\n                vm.time.hour(vm.time.hour() - 12);\r\n        }\r\n\r\n        function setPM() {\r\n            if (vm.time.hours() < 12)\r\n                vm.time.hour(vm.time.hour() + 12);\r\n        }\r\n\r\n        function cancel() {\r\n            $mdDialog.cancel();\r\n        }\r\n\r\n        function confirm() {\r\n            $mdDialog.hide(vm.time.toDate());\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpClock.$inject = [\"$animate\", \"$timeout\", \"$$rAF\", \"$window\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpClock', mdpClock);\r\n\r\n    /** @ngInject */\r\n    function mdpClock($animate, $timeout, $$rAF, $window) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            bindToController: {\r\n                'type': '@?',\r\n                'time': '=',\r\n                'autoSwitch': '=?',\r\n                'autoClose': '=?',\r\n                'minutesSteps': '=?'\r\n            },\r\n            replace: true,\r\n            templateUrl: 'mdpTimePicker/templates/clock.html',\r\n            controller: 'ClockCtrl',\r\n            controllerAs: 'clock',\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ctrl) {\r\n            var pointer = angular.element(element[0].querySelector('.mdp-pointer')),\r\n                timepickerCtrl = scope.$parent.timepicker;\r\n\r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                var isMinutesPicker = timepickerCtrl.currentView === 2;\r\n                var shouldClose = ctrl.autoClose && isMinutesPicker;\r\n                var isClickOrUp = ['mouseup', 'click'].indexOf(event.type) !== -1;\r\n\r\n                $$rAF(function() {\r\n                    $timeout(function () {\r\n                        ctrl.setTimeByDeg(deg + 180);\r\n\r\n                        if (!timepickerCtrl) {\r\n                            return;\r\n                        }\r\n\r\n                        if (!isClickOrUp) {\r\n                            return;\r\n                        }\r\n                        if (ctrl.autoSwitch && !shouldClose) {\r\n                            timepickerCtrl.switchView();\r\n                            return;\r\n                        };\r\n\r\n                        if (shouldClose) {\r\n                            timepickerCtrl.confirm();\r\n                            return;\r\n                        };\r\n                    });\r\n                });\r\n            };\r\n\r\n            element.on('mousedown', function() {\r\n                element.on('mousemove', onEvent);\r\n\r\n                element.on('mouseup', function(e) {\r\n                    element.off('mousemove', onEvent);\r\n                    element.off('mouseup');\r\n                    onEvent(e);\r\n                });\r\n            });\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', onEvent);\r\n                element.off('mousemove', onEvent);\r\n                element.off('mousedown', onEvent);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpTimePicker.$inject = [\"$mdpTimePicker\", \"$timeout\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpTimePicker', mdpTimePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpTimePicker($mdpTimePicker, $timeout) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                'timeFormat': '@mdpFormat',\r\n                'autoSwitch': '=?mdpAutoSwitch',\r\n                'autoClose': '=?mdpAutoClose',\r\n                'minutesSteps': '=?mdpMinutesSteps'\r\n            },\r\n            link: linkFn\r\n        }\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            scope.timeFormat = scope.timeFormat || 'HH:mm';\r\n\r\n            function showPicker(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch,\r\n                    autoClose: scope.autoClose,\r\n                    minutesSteps: scope.minutesSteps\r\n                }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.timeFormat));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n\r\n            element.on('click', showPicker);\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', showPicker);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpTimePicker.$inject = [\"$mdpTimePicker\", \"$timeout\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpTimePicker', mdpTimePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpTimePicker($mdpTimePicker, $timeout) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            require: 'ngModel',\r\n            transclude: true,\r\n            template: function(element, attrs) {\r\n                var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                    placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                    openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n                return '<div layout layout-align=\"start start\">' +\r\n                            '<md-button ng-disabled=\"disabled\" class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                                '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\r\n                            '</md-button>' +\r\n                            '<md-input-container flex' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                                '<input ng-disabled=\"disabled\" type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                            '</md-input-container>' +\r\n                        '</div>';\r\n            },\r\n            scope: {\r\n                'timeFormat': '@mdpFormat',\r\n                'placeholder': '@mdpPlaceholder',\r\n                'autoSwitch': '=?mdpAutoSwitch',\r\n                'autoClose': '=?mdpAutoClose',\r\n                'minutesSteps': '=?mdpMinutesSteps',\r\n                'disabled': '=?mdpDisabled'\r\n            },\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller('mdInputContainer');\r\n\r\n            $transclude(function(clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector('[ng-messages]'));\r\n\r\n            scope.type = scope.timeFormat ? 'text' : 'time';\r\n            scope.timeFormat = scope.timeFormat || 'HH:mm';\r\n            scope.autoSwitch = scope.autoSwitch || false;\r\n            scope.autoClose = scope.autoClose || false;\r\n            scope.minutesSteps = scope.minutesSteps || null;\r\n\r\n            if (!angular.isDefined(scope.disabled)) {\r\n                scope.disabled = attrs.hasOwnProperty('mdpDisabled');\r\n            }\r\n\r\n            scope.$watch(function() {\r\n                return ngModel.$error;\r\n            }, function(newValue, oldValue) {\r\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n            }, true);\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var time = angular.isDate(value) && moment(value);\r\n                if (time && time.isValid()) {\r\n                    updateInputElement(time.format(scope.timeFormat));\r\n                    ngModel.$setValidity('required', true);\r\n                } else {\r\n                    updateInputElement('');\r\n                }\r\n            });\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.timeFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.minutes(parsed.minutes());\r\n                        originalModel.hours(parsed.hours());\r\n                        originalModel.seconds(parsed.seconds());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if (ngModel.$valid) {\r\n                    inputElement[0].size = value.length + 1;\r\n                }\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateTime(time) {\r\n                if (time) {\r\n                    if (angular.isDate(time)) {\r\n                        time = moment(time).format(scope.timeFormat);\r\n                    }\r\n\r\n                    var value = moment.isMoment(time) ? time.format(scope.dateFormat) : time;\r\n\r\n                    updateInputElement(value);\r\n                    ngModel.$setViewValue(value);\r\n                } else {\r\n                    ngModel.$setViewValue('');\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass('md-auto-hide') &&\r\n                    inputContainer.hasClass('md-input-invalid')) {\r\n                    messages.removeClass('md-auto-hide');\r\n                }\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch,\r\n                    autoClose: scope.autoClose,\r\n                    minutesSteps: scope.minutesSteps\r\n                }).then(function(time) {\r\n                    updateTime(time, true);\r\n                });\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewValue) {\r\n                    updateTime(event.target.value);\r\n                }\r\n            }\r\n\r\n            inputElement.on('reset input blur', onInputElementEvents);\r\n\r\n            scope.$on('$destroy', function() {\r\n                inputElement.off('reset input blur', onInputElementEvents);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .provider('$mdpTimePicker', $mdpTimePicker);\r\n\r\n    function $mdpTimePicker() {\r\n        var LABEL_OK = 'OK',\r\n            LABEL_CANCEL = 'Cancel';\r\n\r\n        this.setOKButtonLabel = function(label) {\r\n            LABEL_OK = label;\r\n        };\r\n\r\n        this.setCancelButtonLabel = function(label) {\r\n            LABEL_CANCEL = label;\r\n        };\r\n\r\n        /** @ngInject */\r\n        this.$get = [\"$mdDialog\", function($mdDialog) {\r\n            var timePicker = function(time, options) {\r\n                if (!angular.isDate(time)) time = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                options.labels = {\r\n                    cancel: LABEL_CANCEL,\r\n                    ok: LABEL_OK\r\n                };\r\n\r\n                return $mdDialog.show({\r\n                    controller: 'TimePickerCtrl',\r\n                    controllerAs: 'timepicker',\r\n                    clickOutsideToClose: true,\r\n                    templateUrl: 'mdpTimePicker/templates/mdp-time-picker.html',\r\n                    targetEvent: options.targetEvent,\r\n                    locals: {\r\n                        time: time,\r\n                        options: options\r\n                    },\r\n                    skipHide: true\r\n                });\r\n            };\r\n\r\n            return timePicker;\r\n        }];\r\n        this.$get.$inject = [\"$mdDialog\"];\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    CalendarCtrl.$inject = [\"$scope\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('CalendarCtrl', CalendarCtrl);\r\n\r\n    /** @ngInject */\r\n    function CalendarCtrl($scope) {\r\n        var self = this;\r\n        this.dow = moment.localeData().firstDayOfWeek();\r\n\r\n        this.weekDays = [].concat(\r\n            moment.weekdaysMin().slice(\r\n                this.dow\r\n            ),\r\n            moment.weekdaysMin().slice(\r\n                0,\r\n                this.dow\r\n            )\r\n        );\r\n\r\n        this.daysInMonth = [];\r\n\r\n        this.getDaysInMonth = function() {\r\n            var days = self.date.daysInMonth(),\r\n                firstDay = moment(self.date).date(1).day() - this.dow;\r\n\r\n            if (firstDay < 0) firstDay = this.weekDays.length - 1;\r\n\r\n\r\n            var arr = [];\r\n            for (var i = 1; i <= (firstDay + days); i++) {\r\n                var day = null;\r\n                if (i > firstDay) {\r\n                    day = {\r\n                        value: (i - firstDay),\r\n                        enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                    };\r\n                }\r\n                arr.push(day);\r\n            }\r\n\r\n            return arr;\r\n        };\r\n\r\n        this.isDayEnabled = function(day) {\r\n            return (!this.minDate || this.minDate <= day) &&\r\n                (!this.maxDate || this.maxDate >= day) &&\r\n                (!self.dateFilter || !self.dateFilter(day));\r\n        };\r\n\r\n        this.selectDate = function(dom) {\r\n            self.date.date(dom);\r\n        };\r\n\r\n        this.nextMonth = function() {\r\n            self.date.add(1, 'months');\r\n        };\r\n\r\n        this.prevMonth = function() {\r\n            self.date.subtract(1, 'months');\r\n        };\r\n\r\n        this.updateDaysInMonth = function() {\r\n            self.daysInMonth = self.getDaysInMonth();\r\n        };\r\n\r\n        $scope.$watch(function() {\r\n            return self.date.unix() }, function(newValue, oldValue) {\r\n            if (newValue && newValue !== oldValue)\r\n                self.updateDaysInMonth();\r\n        })\r\n\r\n        self.updateDaysInMonth();\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n(function() {\r\n    'use strict';\r\n\r\n    DatePickerCtrl.$inject = [\"$scope\", \"$mdDialog\", \"$mdMedia\", \"$timeout\", \"currentDate\", \"options\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('DatePickerCtrl', DatePickerCtrl);\r\n\r\n    /** @ngInject */\r\n    function DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n        var self = this;\r\n\r\n        this.date = moment(currentDate);\r\n        this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n        this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n        this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n        this.labels = options.labels;\r\n        this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n        this.selectingYear = false;\r\n\r\n        // validate min and max date\r\n        if (this.minDate && this.maxDate) {\r\n            if (this.maxDate.isBefore(this.minDate)) {\r\n                this.maxDate = moment(this.minDate).add(1, 'days');\r\n            }\r\n        }\r\n\r\n        if (this.date) {\r\n            // check min date\r\n            if (this.minDate && this.date.isBefore(this.minDate)) {\r\n                this.date = moment(this.minDate);\r\n            }\r\n\r\n            // check max date\r\n            if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n                this.date = moment(this.maxDate);\r\n            }\r\n        }\r\n\r\n        this.yearItems = {\r\n            currentIndex_: 0,\r\n            PAGE_SIZE: 5,\r\n            START: (self.minDate ? self.minDate.year() : 1900),\r\n            END: (self.maxDate ? self.maxDate.year() : 0),\r\n            getItemAtIndex: function(index) {\r\n                if (this.currentIndex_ < index)\r\n                    this.currentIndex_ = index;\r\n\r\n                return this.START + index;\r\n            },\r\n            getLength: function() {\r\n                return Math.min(\r\n                    this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                    Math.abs(this.START - this.END) + 1\r\n                );\r\n            }\r\n        };\r\n\r\n        $scope.$mdMedia = $mdMedia;\r\n        $scope.year = this.date.year();\r\n\r\n        this.selectYear = function(year) {\r\n            self.date.year(year);\r\n            $scope.year = year;\r\n            self.selectingYear = false;\r\n            self.animate();\r\n        };\r\n\r\n        this.showYear = function() {\r\n            self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n            self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n            self.selectingYear = true;\r\n        };\r\n\r\n        this.showCalendar = function() {\r\n            self.selectingYear = false;\r\n        };\r\n\r\n        this.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n\r\n        this.confirm = function() {\r\n            var date = this.date;\r\n\r\n            if (this.minDate && this.date.isBefore(this.minDate)) {\r\n                date = moment(this.minDate);\r\n            }\r\n\r\n            if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n                date = moment(this.maxDate);\r\n            }\r\n\r\n            $mdDialog.hide(date.toDate());\r\n        };\r\n\r\n        this.animate = function() {\r\n            self.animating = true;\r\n            $timeout(angular.noop).then(function() {\r\n                self.animating = false;\r\n            })\r\n        };\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    mdpCalendar.$inject = [\"$animate\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpCalendar', mdpCalendar);\r\n\r\n    /** @ngInject */\r\n    function mdpCalendar($animate) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            bindToController: {\r\n                'date': '=',\r\n                'minDate': '=',\r\n                'maxDate': '=',\r\n                'dateFilter': '='\r\n            },\r\n            templateUrl: 'mdpDatePicker/templates/mdp-date-picker-calendar.html',\r\n            controller: 'CalendarCtrl',\r\n            controllerAs: 'calendar',\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector('.mdp-calendar-week-days'),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function(a) {\r\n                return angular.element(a);\r\n            });\r\n\r\n            scope.$watch(function() {\r\n                return ctrl.date.format('YYYYMM')\r\n            }, function(newValue, oldValue) {\r\n                var direction = null;\r\n\r\n                if (newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if (newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n\r\n                if (direction) {\r\n                    for (var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpDatePicker.$inject = [\"$mdpDatePicker\", \"$timeout\", \"mdpDatePickerService\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive(\"mdpDatePicker\", mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePicker($mdpDatePicker, $timeout, mdpDatePickerService) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                \"minDate\": \"@min\",\r\n                \"maxDate\": \"@max\",\r\n                \"dateFilter\": \"=mdpDateFilter\",\r\n                \"dateFormat\": \"@mdpFormat\",\r\n            },\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n\r\n            scope.$watch(function () {\r\n                return ngModel.$modelValue;\r\n            }, applyValue);\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.formatValidator(viewValue, scope.format);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.minDateValidator(viewValue, scope.format, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.maxDateValidator(viewValue, scope.format, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.filterValidator(viewValue, scope.format, scope.dateFilter);\r\n            };\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.requiredValidator(viewValue);\r\n            };\r\n\r\n            function showPicker(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(applyValue);\r\n            }\r\n\r\n            function applyValue (value) {\r\n                ngModel.$setViewValue(value ? moment(value).format(scope.format) : '');\r\n                ngModel.$render();\r\n            }\r\n\r\n            element.on('click', showPicker);\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', showPicker);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n\r\n    mdpDatePicker.$inject = [\"$mdpDatePicker\", \"$timeout\", \"mdpDatePickerService\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpDatePicker', mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePicker($mdpDatePicker, $timeout, mdpDatePickerService) {\r\n\r\n        var directive = {\r\n            restrict: 'E',\r\n            require: 'ngModel',\r\n            transclude: true,\r\n            template: function(element, attrs) {\r\n                var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                    placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                    openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n                return '<div layout layout-align=\"start start\">' +\r\n                            '<md-button ng-disabled=\"disabled\" class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                                '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\r\n                            '</md-button>' +\r\n                            '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' ng-model=\"model\" md-is-error=\"isError()\" flex>' +\r\n                                '<input ng-disabled=\"disabled\" type=\"{{ type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                            '</md-input-container>' +\r\n                        '</div>';\r\n            },\r\n            scope: {\r\n                'minDate': '=mdpMinDate',\r\n                'maxDate': '=mdpMaxDate',\r\n                'dateFilter': '=mdpDateFilter',\r\n                'dateFormat': '@mdpFormat',\r\n                'placeholder': '@mdpPlaceholder',\r\n                'noFloat': '=mdpNoFloat',\r\n                'openOnClick': '=mdpOpenOnClick',\r\n                'disabled': '=?mdpDisabled'\r\n            },\r\n            link: {\r\n                post: postLink\r\n            }\r\n        };\r\n\r\n        return directive;\r\n\r\n        function postLink(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller('mdInputContainer');\r\n\r\n            $transclude(function(clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector('[ng-messages]'));\r\n\r\n            scope.type = scope.dateFormat ? 'text' : 'date';\r\n            scope.dateFormat = scope.dateFormat || 'YYYY-MM-DD';\r\n            scope.model = ngModel;\r\n\r\n            if (!angular.isDefined(scope.disabled)) {\r\n                scope.disabled = attrs.hasOwnProperty('mdpDisabled');\r\n            }\r\n\r\n            function updateView (newValue) {\r\n                if (angular.isDefined(newValue)) {\r\n                    ngModel.$validate();\r\n                }\r\n            }\r\n\r\n            scope.$watch('minDate', updateView);\r\n            scope.$watch('maxDate', updateView);\r\n            scope.$watch('dateFilter', updateView);\r\n\r\n            scope.isError = function() {\r\n                return !ngModel.$pristine && !!ngModel.$invalid;\r\n            };\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var localValue = angular.copy(value);\r\n                var date = angular.isDate(localValue) && moment(localValue);\r\n                updateInputElement(\r\n                    date && date.isValid() ? date.format(scope.dateFormat) : ''\r\n                );\r\n                ngModel.$validate();\r\n            });\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.formatValidator(viewValue, scope.dateFormat);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.minDateValidator(viewValue, scope.dateFormat, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\r\n            };\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                if (modelValue && !viewValue) {\r\n                    updateDate(modelValue);\r\n                }\r\n                return mdpDatePickerService.requiredValidator(viewValue);\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.dateFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.year(parsed.year());\r\n                        originalModel.month(parsed.month());\r\n                        originalModel.date(parsed.date());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else {\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n                }\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if (ngModel.$valid && value && value.length) {\r\n                    inputElement[0].size = value.length + 1;\r\n                }\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateDate(date) {\r\n                if (date) {\r\n                    if (angular.isDate(date)) {\r\n                        date = moment(date).format(scope.dateFormat);\r\n                    }\r\n                    var value = moment.isMoment(date) ? date.format(scope.dateFormat) : date;\r\n\r\n                    ngModel.$setViewValue(value);\r\n                    updateInputElement(value);\r\n                } else {\r\n                    ngModel.$setViewValue('');\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass('md-auto-hide') &&\r\n                    inputContainer.hasClass('md-input-invalid')) {\r\n                    messages.removeClass('md-auto-hide');\r\n                }\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(updateDate);\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewValue) {\r\n                    updateDate(event.target.value);\r\n                }\r\n            }\r\n\r\n            inputElement.on('reset input blur', onInputElementEvents);\r\n\r\n            scope.$on('$destroy', function() {\r\n                inputElement.off('reset input blur', onInputElementEvents);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .provider(\"$mdpDatePicker\", $mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function $mdpDatePicker() {\r\n        var LABEL_OK = 'OK',\r\n            LABEL_CANCEL = 'Cancel',\r\n            DISPLAY_FORMAT = 'ddd, MMM DD';\r\n\r\n        this.setDisplayFormat = function(format) {\r\n            DISPLAY_FORMAT = format;\r\n        };\r\n\r\n        this.setOKButtonLabel = function(label) {\r\n            LABEL_OK = label;\r\n        };\r\n\r\n        this.setCancelButtonLabel = function(label) {\r\n            LABEL_CANCEL = label;\r\n        };\r\n\r\n        /** @ngInject */\r\n        this.$get = [\"$mdDialog\", function($mdDialog) {\r\n            var datePicker = function(currentDate, options) {\r\n                if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                options.displayFormat = DISPLAY_FORMAT;\r\n                options.labels = {\r\n                    cancel: LABEL_CANCEL,\r\n                    ok: LABEL_OK\r\n                };\r\n\r\n                return $mdDialog.show({\r\n                    controller: 'DatePickerCtrl',\r\n                    controllerAs: 'datepicker',\r\n                    clickOutsideToClose: true,\r\n                    templateUrl: 'mdpDatePicker/templates/mdp-date-picker.html',\r\n                    targetEvent: options.targetEvent,\r\n                    locals: {\r\n                        currentDate: currentDate,\r\n                        options: options\r\n                    },\r\n                    skipHide: true\r\n                });\r\n            };\r\n\r\n            return datePicker;\r\n        }];\r\n        this.$get.$inject = [\"$mdDialog\"];\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .factory('mdpDatePickerService', mdpDatePickerService);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePickerService() {\r\n\r\n        var service = {\r\n            formatValidator: formatValidator,\r\n            minDateValidator: minDateValidator,\r\n            maxDateValidator: maxDateValidator,\r\n            filterValidator: filterValidator,\r\n            requiredValidator: requiredValidator\r\n        };\r\n\r\n        return service;\r\n\r\n        function formatValidator(value, format) {\r\n            return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n        }\r\n\r\n        function minDateValidator(value, format, minDate) {\r\n            minDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !minDate.isValid() ||\r\n                date.isSameOrAfter(minDate);\r\n        }\r\n\r\n        function maxDateValidator(value, format, maxDate) {\r\n            maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !maxDate.isValid() ||\r\n                date.isSameOrBefore(maxDate);\r\n        }\r\n\r\n        function filterValidator(value, format, filter) {\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !angular.isFunction(filter) ||\r\n                !filter(date);\r\n        }\r\n\r\n        function requiredValidator(value) {\r\n            return !(value === undefined || value === null || value === '');\r\n        }\r\n\r\n    }\r\n})();\r\n\n!function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpDatePicker/templates/mdp-date-picker-calendar.html\",'<div class=\"mdp-calendar\"><div layout=\"row\" layout-align=\"space-between center\"><md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button><div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div><md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button></div><div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\"><div layout=\"\" layout-align=\"center center\" ng-repeat=\"d in ::calendar.weekDays track by $index\">{{ ::d }}</div></div><div layout=\"row\" layout-align=\"start center\" layout-wrap=\"\" class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\"><div layout=\"\" layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\"><md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-dblclick=\"datepicker.confirm()\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button></div><div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end=\"\"></div></div></div>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpDatePicker/templates/mdp-date-picker.html\",'<md-dialog class=\"mdp-datepicker\" ng-class=\"{portrait: !$mdMedia(\\'gt-xs\\')}\"><md-dialog-content layout=\"row\" layout-wrap=\"\"><div layout=\"column\" layout-align=\"start center\"><md-toolbar layout-align=\"start start\" flex=\"noshrink\" class=\"mdp-datepicker-date-wrapper md-primary\" layout=\"column\"><span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{active: datepicker.selectingYear}\">{{ datepicker.date.format(\\'YYYY\\') }}</span> <span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{active: !datepicker.selectingYear}\">{{ datepicker.date.format(datepicker.displayFormat) }}</span></md-toolbar></div><div><div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\"><md-virtual-repeat-container md-auto-shrink=\"\" md-top-index=\"datepicker.yearTopIndex\"><div flex=\"\" md-virtual-repeat=\"item in ::datepicker.yearItems\" md-on-demand=\"\" class=\"repeated-year\"><span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple=\"\" ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span></div></md-virtual-repeat-container></div><mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar><md-dialog-actions layout=\"row\"><span flex=\"\"></span><md-button ng-click=\"datepicker.cancel()\" aria-label=\"{{::datepicker.labels.cancel}}\">{{::datepicker.labels.cancel}}</md-button><md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"{{::datepicker.labels.ok}}\">{{::datepicker.labels.ok}}</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpTimePicker/templates/clock.html\",'<div class=\"mdp-clock\"><div class=\"mdp-clock-container\"><md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar><md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\"><span class=\"mdp-clock-selected md-button md-raised md-primary\"></span></md-toolbar><md-button ng-class=\"{\\'md-primary\\': clock.selected == step}\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button></div></div>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpTimePicker/templates/mdp-time-picker.html\",'<md-dialog class=\"mdp-timepicker\" ng-class=\"{portrait: !$mdMedia(\\'gt-xs\\')}\"><md-dialog-content layout=\"column\" layout-gt-xs=\"row\"><md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex=\"noshrink\" class=\"mdp-timepicker-time md-primary\"><div class=\"mdp-timepicker-selected-time\"><span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span></div><div layout=\"column\" class=\"mdp-timepicker-selected-ampm\"><span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span> <span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span></div></md-toolbar><div flex=\"noshrink\"><div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout=\"\" layout-align=\"center center\"><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" auto-close=\"timepicker.autoClose\" minutes-steps=\"timepicker.minutesSteps\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" auto-close=\"timepicker.autoClose\" minutes-steps=\"timepicker.minutesSteps\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock></div><md-dialog-actions layout=\"row\"><span flex=\"\"></span><md-button ng-click=\"timepicker.cancel()\" aria-label=\"{{::timepicker.labels.cancel}}\">{{::timepicker.labels.cancel}}</md-button><md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"{{::timepicker.labels.ok}}\">{{::timepicker.labels.ok}}</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>')}])}();\n})();"],"sourceRoot":"/source/"}