{"version":3,"sources":["mdPickers.min.js"],"names":["configIcons","$mdIconProvider","mdpIconsRegistry","angular","forEach","icon","index","id","url","runBlock","$templateCache","put","svg","$inject","module","config","run","constant","ngMessage","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","directive","mdpCalendar","$animate","linkFn","scope","attrs","ctrl","animElements","querySelector","map","a","$watch","date","format","newValue","oldValue","direction","i","addClass","removeClass","bindToController","minDate","maxDate","dateFilter","templateUrl","controller","controllerAs","link","mdpDatePicker","$mdpDatePicker","$timeout","mdpDatePickerService","ngModel","$transclude","showPicker","ev","$modelValue","targetEvent","then","applyValue","value","$setViewValue","moment","$render","dateFormat","$validators","modelValue","viewValue","formatValidator","minDateValidator","maxDateValidator","filter","filterValidator","required","requiredValidator","on","$on","off","require","postLink","updateInputElement","$valid","length","inputElement","size","inputContainerCtrl","setHasValue","$isEmpty","updateDate","isDate","isMoment","$pristine","messages","hasClass","onInputElementEvents","event","target","$viewValue","clone","append","type","model","isDefined","disabled","hasOwnProperty","isError","$invalid","$formatters","unshift","isValid","$setValidity","$parsers","parsed","originalModel","year","month","toDate","transclude","template","noFloat","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","post","CalendarCtrl","$scope","self","this","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","arr","enabled","isDayEnabled","push","selectDate","dom","nextMonth","add","prevMonth","subtract","updateDaysInMonth","unix","DatePickerCtrl","$mdDialog","$mdMedia","currentDate","options","displayFormat","labels","isFunction","selectingYear","isBefore","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","END","getItemAtIndex","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","animating","noop","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","Date","now","isObject","ok","show","clickOutsideToClose","locals","skipHide","provider","isSameOrAfter","isSameOrBefore","undefined","service","factory","ClockCtrl","getPointerStyle","divider","vm","TYPE_HOURS","TYPE_MINUTES","isNumber","minutesSteps","selected","getClosestStep","degrees","round","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","hours","minutes","init","steps","STEP_DEG","CLOCK_TYPES","range","TimePickerCtrl","switchView","currentView","VIEW_HOURS","VIEW_MINUTES","setAM","hour","setPM","autoSwitch","autoClose","clockHours","parseInt","clockMinutes","mdpClock","$$rAF","$window","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","isMinutesPicker","shouldClose","isClickOrUp","indexOf","console","log","e","replace","mdpTimePicker","$mdpTimePicker","timeFormat","updateTime","$error","setInvalid","Object","keys","seconds","timePicker"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n(function() {\r\n    'use strict';\r\n\r\n    configIcons.$inject = [\"$mdIconProvider\", \"mdpIconsRegistry\"];\r\n    runBlock.$inject = [\"$templateCache\", \"mdpIconsRegistry\"];\r\n    angular\r\n        .module('mdPickers', [\r\n            'ngMaterial',\r\n            'ngAnimate',\r\n            'ngAria'\r\n        ])\r\n        .config(configIcons)\r\n        .run(runBlock);\r\n\r\n    /** @ngInject */\r\n    function configIcons($mdIconProvider, mdpIconsRegistry) {\r\n        angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n            $mdIconProvider.icon(icon.id, icon.url);\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function runBlock($templateCache, mdpIconsRegistry) {\r\n        angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n            $templateCache.put(icon.url, icon.svg);\r\n        });\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .constant('mdpIconsRegistry', [{\r\n            id: 'mdp-chevron-left',\r\n            url: 'mdp-chevron-left.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }, {\r\n            id: 'mdp-chevron-right',\r\n            url: 'mdp-chevron-right.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }, {\r\n            id: 'mdp-access-time',\r\n            url: 'mdp-access-time.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n        }, {\r\n            id: 'mdp-event',\r\n            url: 'mdp-event.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }]);\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    ngMessage.$inject = [\"$mdUtil\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('ngMessage', ngMessage);\r\n\r\n    /** @ngInject */\r\n    function ngMessage($mdUtil) {\r\n        return {\r\n            restrict: 'EA',\r\n            priority: 101,\r\n            compile: function(element) {\r\n                var inputContainer = $mdUtil.getClosest(element, 'mdp-time-picker', true) ||\r\n                    $mdUtil.getClosest(element, 'mdp-date-picker', true);\r\n\r\n                // If we are not a child of an input container, don't do anything\r\n                if (!inputContainer) return;\r\n\r\n                // Add our animation class\r\n                element.toggleClass('md-input-message-animation', true);\r\n\r\n                return {};\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    mdpCalendar.$inject = [\"$animate\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpCalendar', mdpCalendar);\r\n\r\n    /** @ngInject */\r\n    function mdpCalendar($animate) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            bindToController: {\r\n                'date': '=',\r\n                'minDate': '=',\r\n                'maxDate': '=',\r\n                'dateFilter': '='\r\n            },\r\n            templateUrl: 'mdpDatePicker/templates/mdp-date-picker-calendar.html',\r\n            controller: 'CalendarCtrl',\r\n            controllerAs: 'calendar',\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector('.mdp-calendar-week-days'),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function(a) {\r\n                return angular.element(a);\r\n            });\r\n\r\n            scope.$watch(function() {\r\n                return ctrl.date.format('YYYYMM')\r\n            }, function(newValue, oldValue) {\r\n                var direction = null;\r\n\r\n                if (newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if (newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n\r\n                if (direction) {\r\n                    for (var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpDatePicker.$inject = [\"$mdpDatePicker\", \"$timeout\", \"mdpDatePickerService\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive(\"mdpDatePicker\", mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePicker($mdpDatePicker, $timeout, mdpDatePickerService) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                \"minDate\": \"@min\",\r\n                \"maxDate\": \"@max\",\r\n                \"dateFilter\": \"=mdpDateFilter\",\r\n                \"dateFormat\": \"@mdpFormat\",\r\n            },\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n\r\n            scope.$watch(function () {\r\n                return ngModel.$modelValue;\r\n            }, applyValue);\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.formatValidator(viewValue, scope.format);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.minDateValidator(viewValue, scope.format, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.maxDateValidator(viewValue, scope.format, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.filterValidator(viewValue, scope.format, scope.dateFilter);\r\n            };\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.requiredValidator(viewValue);\r\n            };\r\n\r\n            function showPicker(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(applyValue);\r\n            }\r\n\r\n            function applyValue (value) {\r\n                ngModel.$setViewValue(value ? moment(value).format(scope.format) : '');\r\n                ngModel.$render();\r\n            }\r\n\r\n            element.on('click', showPicker);\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', showPicker);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n\r\n    mdpDatePicker.$inject = [\"$mdpDatePicker\", \"$timeout\", \"mdpDatePickerService\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpDatePicker', mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePicker($mdpDatePicker, $timeout, mdpDatePickerService) {\r\n\r\n        var directive = {\r\n            restrict: 'E',\r\n            require: 'ngModel',\r\n            transclude: true,\r\n            template: function(element, attrs) {\r\n                var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                    placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                    openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n                return '<div layout layout-align=\"start start\">' +\r\n                            '<md-button ng-disabled=\"disabled\" class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                                '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\r\n                            '</md-button>' +\r\n                            '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\" flex>' +\r\n                                '<input ng-disabled=\"disabled\" type=\"{{ type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                            '</md-input-container>' +\r\n                        '</div>';\r\n            },\r\n            scope: {\r\n                'minDate': '=mdpMinDate',\r\n                'maxDate': '=mdpMaxDate',\r\n                'dateFilter': '=mdpDateFilter',\r\n                'dateFormat': '@mdpFormat',\r\n                'placeholder': '@mdpPlaceholder',\r\n                'noFloat': '=mdpNoFloat',\r\n                'openOnClick': '=mdpOpenOnClick',\r\n                'disabled': '=?mdpDisabled'\r\n            },\r\n            link: {\r\n                post: postLink\r\n            }\r\n        };\r\n\r\n        return directive;\r\n\r\n        function postLink(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller('mdInputContainer');\r\n\r\n            $transclude(function(clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector('[ng-messages]'));\r\n\r\n            scope.type = scope.dateFormat ? 'text' : 'date';\r\n            scope.dateFormat = scope.dateFormat || 'YYYY-MM-DD';\r\n            scope.model = ngModel;\r\n\r\n            if (!angular.isDefined(scope.disabled)) {\r\n                scope.disabled = attrs.hasOwnProperty('mdpDisabled');\r\n            }\r\n\r\n            scope.isError = function() {\r\n                return !ngModel.$pristine && !!ngModel.$invalid;\r\n            };\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var date = angular.isDate(value) && moment(value);\r\n                if (date && date.isValid()) {\r\n                    updateInputElement(date.format(scope.dateFormat));\r\n                    ngModel.$setValidity('required', true);\r\n                } else {\r\n                    updateInputElement('');\r\n                }\r\n            });\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.formatValidator(viewValue, scope.dateFormat);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.minDateValidator(viewValue, scope.dateFormat, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\r\n            };\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.requiredValidator(viewValue);\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.dateFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.year(parsed.year());\r\n                        originalModel.month(parsed.month());\r\n                        originalModel.date(parsed.date());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else {\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n                }\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if (ngModel.$valid && value && value.length) {\r\n                    inputElement[0].size = value.length + 1;\r\n                }\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateDate(date) {\r\n                if (date) {\r\n                    if (angular.isDate(date)) {\r\n                        date = moment(date).format(scope.dateFormat);\r\n                    }\r\n                    var value = moment.isMoment(date) ? date.format(scope.dateFormat) : date;\r\n\r\n                    ngModel.$setViewValue(value);\r\n                    updateInputElement(value);\r\n                } else {\r\n                    ngModel.$setViewValue('');\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass('md-auto-hide') &&\r\n                    inputContainer.hasClass('md-input-invalid')) {\r\n                    messages.removeClass('md-auto-hide');\r\n                }\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(updateDate);\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewValue) {\r\n                    updateDate(event.target.value);\r\n                }\r\n            }\r\n\r\n            inputElement.on('reset input blur', onInputElementEvents);\r\n\r\n            scope.$on('$destroy', function() {\r\n                inputElement.off('reset input blur', onInputElementEvents);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    CalendarCtrl.$inject = [\"$scope\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('CalendarCtrl', CalendarCtrl);\r\n\r\n    /** @ngInject */\r\n    function CalendarCtrl($scope) {\r\n        var self = this;\r\n        this.dow = moment.localeData().firstDayOfWeek();\r\n\r\n        this.weekDays = [].concat(\r\n            moment.weekdaysMin().slice(\r\n                this.dow\r\n            ),\r\n            moment.weekdaysMin().slice(\r\n                0,\r\n                this.dow\r\n            )\r\n        );\r\n\r\n        this.daysInMonth = [];\r\n\r\n        this.getDaysInMonth = function() {\r\n            var days = self.date.daysInMonth(),\r\n                firstDay = moment(self.date).date(1).day() - this.dow;\r\n\r\n            if (firstDay < 0) firstDay = this.weekDays.length - 1;\r\n\r\n\r\n            var arr = [];\r\n            for (var i = 1; i <= (firstDay + days); i++) {\r\n                var day = null;\r\n                if (i > firstDay) {\r\n                    day = {\r\n                        value: (i - firstDay),\r\n                        enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                    };\r\n                }\r\n                arr.push(day);\r\n            }\r\n\r\n            return arr;\r\n        };\r\n\r\n        this.isDayEnabled = function(day) {\r\n            return (!this.minDate || this.minDate <= day) &&\r\n                (!this.maxDate || this.maxDate >= day) &&\r\n                (!self.dateFilter || !self.dateFilter(day));\r\n        };\r\n\r\n        this.selectDate = function(dom) {\r\n            self.date.date(dom);\r\n        };\r\n\r\n        this.nextMonth = function() {\r\n            self.date.add(1, 'months');\r\n        };\r\n\r\n        this.prevMonth = function() {\r\n            self.date.subtract(1, 'months');\r\n        };\r\n\r\n        this.updateDaysInMonth = function() {\r\n            self.daysInMonth = self.getDaysInMonth();\r\n        };\r\n\r\n        $scope.$watch(function() {\r\n            return self.date.unix() }, function(newValue, oldValue) {\r\n            if (newValue && newValue !== oldValue)\r\n                self.updateDaysInMonth();\r\n        })\r\n\r\n        self.updateDaysInMonth();\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n(function() {\r\n    'use strict';\r\n\r\n    DatePickerCtrl.$inject = [\"$scope\", \"$mdDialog\", \"$mdMedia\", \"$timeout\", \"currentDate\", \"options\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('DatePickerCtrl', DatePickerCtrl);\r\n\r\n    /** @ngInject */\r\n    function DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n        var self = this;\r\n\r\n        this.date = moment(currentDate);\r\n        this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n        this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n        this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n        this.labels = options.labels;\r\n        this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n        this.selectingYear = false;\r\n\r\n        // validate min and max date\r\n        if (this.minDate && this.maxDate) {\r\n            if (this.maxDate.isBefore(this.minDate)) {\r\n                this.maxDate = moment(this.minDate).add(1, 'days');\r\n            }\r\n        }\r\n\r\n        if (this.date) {\r\n            // check min date\r\n            if (this.minDate && this.date.isBefore(this.minDate)) {\r\n                this.date = moment(this.minDate);\r\n            }\r\n\r\n            // check max date\r\n            if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n                this.date = moment(this.maxDate);\r\n            }\r\n        }\r\n\r\n        this.yearItems = {\r\n            currentIndex_: 0,\r\n            PAGE_SIZE: 5,\r\n            START: (self.minDate ? self.minDate.year() : 1900),\r\n            END: (self.maxDate ? self.maxDate.year() : 0),\r\n            getItemAtIndex: function(index) {\r\n                if (this.currentIndex_ < index)\r\n                    this.currentIndex_ = index;\r\n\r\n                return this.START + index;\r\n            },\r\n            getLength: function() {\r\n                return Math.min(\r\n                    this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                    Math.abs(this.START - this.END) + 1\r\n                );\r\n            }\r\n        };\r\n\r\n        $scope.$mdMedia = $mdMedia;\r\n        $scope.year = this.date.year();\r\n\r\n        this.selectYear = function(year) {\r\n            self.date.year(year);\r\n            $scope.year = year;\r\n            self.selectingYear = false;\r\n            self.animate();\r\n        };\r\n\r\n        this.showYear = function() {\r\n            self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n            self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n            self.selectingYear = true;\r\n        };\r\n\r\n        this.showCalendar = function() {\r\n            self.selectingYear = false;\r\n        };\r\n\r\n        this.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n\r\n        this.confirm = function() {\r\n            var date = this.date;\r\n\r\n            if (this.minDate && this.date.isBefore(this.minDate)) {\r\n                date = moment(this.minDate);\r\n            }\r\n\r\n            if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n                date = moment(this.maxDate);\r\n            }\r\n\r\n            $mdDialog.hide(date.toDate());\r\n        };\r\n\r\n        this.animate = function() {\r\n            self.animating = true;\r\n            $timeout(angular.noop).then(function() {\r\n                self.animating = false;\r\n            })\r\n        };\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .provider(\"$mdpDatePicker\", $mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function $mdpDatePicker() {\r\n        var LABEL_OK = 'OK',\r\n            LABEL_CANCEL = 'Cancel',\r\n            DISPLAY_FORMAT = 'ddd, MMM DD';\r\n\r\n        this.setDisplayFormat = function(format) {\r\n            DISPLAY_FORMAT = format;\r\n        };\r\n\r\n        this.setOKButtonLabel = function(label) {\r\n            LABEL_OK = label;\r\n        };\r\n\r\n        this.setCancelButtonLabel = function(label) {\r\n            LABEL_CANCEL = label;\r\n        };\r\n\r\n        /** @ngInject */\r\n        this.$get = [\"$mdDialog\", function($mdDialog) {\r\n            var datePicker = function(currentDate, options) {\r\n                if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                options.displayFormat = DISPLAY_FORMAT;\r\n                options.labels = {\r\n                    cancel: LABEL_CANCEL,\r\n                    ok: LABEL_OK\r\n                };\r\n\r\n                return $mdDialog.show({\r\n                    controller: 'DatePickerCtrl',\r\n                    controllerAs: 'datepicker',\r\n                    clickOutsideToClose: true,\r\n                    templateUrl: 'mdpDatePicker/templates/mdp-date-picker.html',\r\n                    targetEvent: options.targetEvent,\r\n                    locals: {\r\n                        currentDate: currentDate,\r\n                        options: options\r\n                    },\r\n                    skipHide: true\r\n                });\r\n            };\r\n\r\n            return datePicker;\r\n        }];\r\n        this.$get.$inject = [\"$mdDialog\"];\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .factory('mdpDatePickerService', mdpDatePickerService);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePickerService() {\r\n\r\n        var service = {\r\n            formatValidator: formatValidator,\r\n            minDateValidator: minDateValidator,\r\n            maxDateValidator: maxDateValidator,\r\n            filterValidator: filterValidator,\r\n            requiredValidator: requiredValidator\r\n        };\r\n\r\n        return service;\r\n\r\n        function formatValidator(value, format) {\r\n            return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n        }\r\n\r\n        function minDateValidator(value, format, minDate) {\r\n            minDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !minDate.isValid() ||\r\n                date.isSameOrAfter(minDate);\r\n        }\r\n\r\n        function maxDateValidator(value, format, maxDate) {\r\n            maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !maxDate.isValid() ||\r\n                date.isSameOrBefore(maxDate);\r\n        }\r\n\r\n        function filterValidator(value, format, filter) {\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !angular.isFunction(filter) ||\r\n                !filter(date);\r\n        }\r\n\r\n        function requiredValidator(value) {\r\n            return !(value === undefined || value === null || value === '');\r\n        }\r\n\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    ClockCtrl.$inject = [\"$scope\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('ClockCtrl', ClockCtrl);\r\n\r\n    /** @ngInject */\r\n    function ClockCtrl($scope) {\r\n        var vm = this;\r\n\r\n        var TYPE_HOURS = 'hours';\r\n        var TYPE_MINUTES = 'minutes';\r\n\r\n        vm.STEP_DEG = 360 / 12;\r\n        vm.steps = [];\r\n        vm.CLOCK_TYPES = {\r\n            hours: {\r\n                range: 12,\r\n            },\r\n            minutes: {\r\n                range: 60,\r\n            }\r\n        };\r\n\r\n        vm.getPointerStyle = getPointerStyle;\r\n        vm.setTimeByDeg = setTimeByDeg;\r\n        vm.setTime = setTime;\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function getPointerStyle() {\r\n            var divider = 1;\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    divider = 12;\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    divider = 60;\r\n                    break;\r\n            }\r\n\r\n            if (angular.isNumber(vm.minutesSteps) && vm.type === TYPE_MINUTES) {\r\n                vm.selected = getClosestStep(vm.selected);\r\n            }\r\n\r\n            var degrees = Math.round(vm.selected * (360 / divider)) - 180;\r\n\r\n            return {\r\n                '-webkit-transform': 'rotate(' + degrees + 'deg)',\r\n                '-ms-transform': 'rotate(' + degrees + 'deg)',\r\n                'transform': 'rotate(' + degrees + 'deg)'\r\n            }\r\n        }\r\n\r\n        function setTimeByDeg(deg) {\r\n            deg = deg >= 360 ? 0 : deg;\r\n            var divider = 0;\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    divider = 12;\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    divider = 60;\r\n                    break;\r\n            }\r\n\r\n            vm.setTime(\r\n                Math.round(divider / 360 * deg)\r\n            );\r\n        }\r\n\r\n        function getClosestStep (time) {\r\n            return Math.round(time / vm.minutesSteps) * vm.minutesSteps;\r\n        }\r\n\r\n        function setTime(time, type) {\r\n            vm.selected = time;\r\n\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    if (vm.time.format('A') == 'PM') time += 12;\r\n                    vm.time.hours(time);\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    if (angular.isNumber(vm.minutesSteps)) {\r\n                        time = getClosestStep(time);\r\n                    }\r\n                    if (time > 59) time -= 60;\r\n                    vm.time.minutes(time);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function init() {\r\n            vm.type = vm.type || 'hours';\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    for (var i = 1; i <= 12; i++)\r\n                        vm.steps.push(i);\r\n                    vm.selected = vm.time.hours() || 0;\r\n                    if (vm.selected > 12) vm.selected -= 12;\r\n\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    for (var i = 5; i <= 55; i += 5)\r\n                        vm.steps.push(i);\r\n                    vm.steps.push(0);\r\n                    vm.selected = vm.time.minutes() || 0;\r\n\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    TimePickerCtrl.$inject = [\"$scope\", \"$mdDialog\", \"time\", \"options\", \"$mdMedia\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('TimePickerCtrl', TimePickerCtrl);\r\n\r\n    /** @ngInject */\r\n    function TimePickerCtrl($scope, $mdDialog, time, options, $mdMedia) {\r\n        var vm = this;\r\n\r\n        vm.VIEW_HOURS = 1;\r\n        vm.VIEW_MINUTES = 2;\r\n        vm.currentView = vm.VIEW_HOURS;\r\n        vm.time = moment(time);\r\n        vm.labels = options.labels;\r\n        vm.autoSwitch = !!options.autoSwitch;\r\n        vm.autoClose = !!options.autoClose;\r\n        vm.minutesSteps = options.minutesSteps || null;\r\n\r\n        vm.clockHours = parseInt(vm.time.format(\"h\"));\r\n        vm.clockMinutes = parseInt(vm.time.minutes());\r\n\r\n        vm.switchView = switchView;\r\n        vm.setAM = setAM;\r\n        vm.setPM = setPM;\r\n        vm.cancel = cancel;\r\n        vm.confirm = confirm;\r\n\r\n        $scope.$mdMedia = $mdMedia;\r\n\r\n        function switchView() {\r\n            vm.currentView = vm.currentView == vm.VIEW_HOURS ? vm.VIEW_MINUTES : vm.VIEW_HOURS;\r\n        }\r\n\r\n        function setAM() {\r\n            if (vm.time.hours() >= 12)\r\n                vm.time.hour(vm.time.hour() - 12);\r\n        }\r\n\r\n        function setPM() {\r\n            if (vm.time.hours() < 12)\r\n                vm.time.hour(vm.time.hour() + 12);\r\n        }\r\n\r\n        function cancel() {\r\n            $mdDialog.cancel();\r\n        }\r\n\r\n        function confirm() {\r\n            $mdDialog.hide(vm.time.toDate());\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpClock.$inject = [\"$animate\", \"$timeout\", \"$$rAF\", \"$window\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpClock', mdpClock);\r\n\r\n    /** @ngInject */\r\n    function mdpClock($animate, $timeout, $$rAF, $window) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            bindToController: {\r\n                'type': '@?',\r\n                'time': '=',\r\n                'autoSwitch': '=?',\r\n                'autoClose': '=?',\r\n                'minutesSteps': '=?'\r\n            },\r\n            replace: true,\r\n            templateUrl: 'mdpTimePicker/templates/clock.html',\r\n            controller: 'ClockCtrl',\r\n            controllerAs: 'clock',\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ctrl) {\r\n            var pointer = angular.element(element[0].querySelector('.mdp-pointer')),\r\n                timepickerCtrl = scope.$parent.timepicker;\r\n\r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                var isMinutesPicker = timepickerCtrl.currentView === 2;\r\n                var shouldClose = ctrl.autoClose && isMinutesPicker;\r\n                var isClickOrUp = ['mouseup', 'click'].indexOf(event.type) !== -1;\r\n\r\n                console.log(shouldClose, isMinutesPicker, isClickOrUp);\r\n\r\n                $$rAF(function() {\r\n                    $timeout(function () {\r\n                        ctrl.setTimeByDeg(deg + 180);\r\n\r\n                        if (!timepickerCtrl) {\r\n                            return;\r\n                        }\r\n\r\n                        if (!isClickOrUp) {\r\n                            return;\r\n                        }\r\n                        if (ctrl.autoSwitch && !shouldClose) {\r\n                            timepickerCtrl.switchView();\r\n                            return;\r\n                        };\r\n\r\n                        if (shouldClose) {\r\n                            timepickerCtrl.confirm();\r\n                            return;\r\n                        };\r\n                    });\r\n                });\r\n            };\r\n\r\n            element.on('mousedown', function() {\r\n                element.on('mousemove', onEvent);\r\n\r\n                element.on('mouseup', function(e) {\r\n                    element.off('mousemove', onEvent);\r\n                    element.off('mouseup');\r\n                    onEvent(e);\r\n                });\r\n            });\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', onEvent);\r\n                element.off('mousemove', onEvent);\r\n                element.off('mousedown', onEvent);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpTimePicker.$inject = [\"$mdpTimePicker\", \"$timeout\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpTimePicker', mdpTimePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpTimePicker($mdpTimePicker, $timeout) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                'timeFormat': '@mdpFormat',\r\n                'autoSwitch': '=?mdpAutoSwitch',\r\n                'autoClose': '=?mdpAutoClose',\r\n                'minutesSteps': '=?mdpMinutesSteps'\r\n            },\r\n            link: linkFn\r\n        }\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            scope.timeFormat = scope.timeFormat || 'HH:mm';\r\n\r\n            function showPicker(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch,\r\n                    autoClose: scope.autoClose,\r\n                    minutesSteps: scope.minutesSteps\r\n                }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.timeFormat));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n\r\n            element.on('click', showPicker);\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', showPicker);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpTimePicker.$inject = [\"$mdpTimePicker\", \"$timeout\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpTimePicker', mdpTimePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpTimePicker($mdpTimePicker, $timeout) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            require: 'ngModel',\r\n            transclude: true,\r\n            template: function(element, attrs) {\r\n                var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                    placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                    openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n                return '<div layout layout-align=\"start start\">' +\r\n                            '<md-button ng-disabled=\"disabled\" class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                                '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\r\n                            '</md-button>' +\r\n                            '<md-input-container flex' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                                '<input ng-disabled=\"disabled\" type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                            '</md-input-container>' +\r\n                        '</div>';\r\n            },\r\n            scope: {\r\n                'timeFormat': '@mdpFormat',\r\n                'placeholder': '@mdpPlaceholder',\r\n                'autoSwitch': '=?mdpAutoSwitch',\r\n                'autoClose': '=?mdpAutoClose',\r\n                'minutesSteps': '=?mdpMinutesSteps',\r\n                'disabled': '=?mdpDisabled'\r\n            },\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller('mdInputContainer');\r\n\r\n            $transclude(function(clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector('[ng-messages]'));\r\n\r\n            scope.type = scope.timeFormat ? 'text' : 'time';\r\n            scope.timeFormat = scope.timeFormat || 'HH:mm';\r\n            scope.autoSwitch = scope.autoSwitch || false;\r\n            scope.autoClose = scope.autoClose || false;\r\n            scope.minutesSteps = scope.minutesSteps || null;\r\n\r\n            if (!angular.isDefined(scope.disabled)) {\r\n                scope.disabled = attrs.hasOwnProperty('mdpDisabled');\r\n            }\r\n\r\n            scope.$watch(function() {\r\n                return ngModel.$error;\r\n            }, function(newValue, oldValue) {\r\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n            }, true);\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var time = angular.isDate(value) && moment(value);\r\n                if (time && time.isValid()) {\r\n                    updateInputElement(time.format(scope.timeFormat));\r\n                    ngModel.$setValidity('required', true);\r\n                } else {\r\n                    updateInputElement('');\r\n                }\r\n            });\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.timeFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.minutes(parsed.minutes());\r\n                        originalModel.hours(parsed.hours());\r\n                        originalModel.seconds(parsed.seconds());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if (ngModel.$valid) {\r\n                    inputElement[0].size = value.length + 1;\r\n                }\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateTime(time) {\r\n                if (time) {\r\n                    if (angular.isDate(time)) {\r\n                        time = moment(time).format(scope.timeFormat);\r\n                    }\r\n\r\n                    var value = moment.isMoment(time) ? time.format(scope.dateFormat) : time;\r\n\r\n                    updateInputElement(value);\r\n                    ngModel.$setViewValue(value);\r\n                } else {\r\n                    ngModel.$setViewValue('');\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass('md-auto-hide') &&\r\n                    inputContainer.hasClass('md-input-invalid')) {\r\n                    messages.removeClass('md-auto-hide');\r\n                }\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch,\r\n                    autoClose: scope.autoClose,\r\n                    minutesSteps: scope.minutesSteps\r\n                }).then(function(time) {\r\n                    updateTime(time, true);\r\n                });\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewValue) {\r\n                    updateTime(event.target.value);\r\n                }\r\n            }\r\n\r\n            inputElement.on('reset input blur', onInputElementEvents);\r\n\r\n            scope.$on('$destroy', function() {\r\n                inputElement.off('reset input blur', onInputElementEvents);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .provider('$mdpTimePicker', $mdpTimePicker);\r\n\r\n    function $mdpTimePicker() {\r\n        var LABEL_OK = 'OK',\r\n            LABEL_CANCEL = 'Cancel';\r\n\r\n        this.setOKButtonLabel = function(label) {\r\n            LABEL_OK = label;\r\n        };\r\n\r\n        this.setCancelButtonLabel = function(label) {\r\n            LABEL_CANCEL = label;\r\n        };\r\n\r\n        /** @ngInject */\r\n        this.$get = [\"$mdDialog\", function($mdDialog) {\r\n            var timePicker = function(time, options) {\r\n                if (!angular.isDate(time)) time = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                options.labels = {\r\n                    cancel: LABEL_CANCEL,\r\n                    ok: LABEL_OK\r\n                };\r\n\r\n                return $mdDialog.show({\r\n                    controller: 'TimePickerCtrl',\r\n                    controllerAs: 'timepicker',\r\n                    clickOutsideToClose: true,\r\n                    templateUrl: 'mdpTimePicker/templates/mdp-time-picker.html',\r\n                    targetEvent: options.targetEvent,\r\n                    locals: {\r\n                        time: time,\r\n                        options: options\r\n                    },\r\n                    skipHide: true\r\n                });\r\n            };\r\n\r\n            return timePicker;\r\n        }];\r\n        this.$get.$inject = [\"$mdDialog\"];\r\n    }\r\n\r\n})();\r\n\n!function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpDatePicker/templates/mdp-date-picker-calendar.html\",'<div class=\"mdp-calendar\"><div layout=\"row\" layout-align=\"space-between center\"><md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button><div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div><md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button></div><div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\"><div layout=\"\" layout-align=\"center center\" ng-repeat=\"d in ::calendar.weekDays track by $index\">{{ ::d }}</div></div><div layout=\"row\" layout-align=\"start center\" layout-wrap=\"\" class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\"><div layout=\"\" layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\"><md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button></div><div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end=\"\"></div></div></div>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpDatePicker/templates/mdp-date-picker.html\",'<md-dialog class=\"mdp-datepicker\" ng-class=\"{portrait: !$mdMedia(\\'gt-xs\\')}\"><md-dialog-content layout=\"row\" layout-wrap=\"\"><div layout=\"column\" layout-align=\"start center\"><md-toolbar layout-align=\"start start\" flex=\"noshrink\" class=\"mdp-datepicker-date-wrapper md-primary\" layout=\"column\"><span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{active: datepicker.selectingYear}\">{{ datepicker.date.format(\\'YYYY\\') }}</span> <span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{active: !datepicker.selectingYear}\">{{ datepicker.date.format(datepicker.displayFormat) }}</span></md-toolbar></div><div><div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\"><md-virtual-repeat-container md-auto-shrink=\"\" md-top-index=\"datepicker.yearTopIndex\"><div flex=\"\" md-virtual-repeat=\"item in ::datepicker.yearItems\" md-on-demand=\"\" class=\"repeated-year\"><span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple=\"\" ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span></div></md-virtual-repeat-container></div><mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar><md-dialog-actions layout=\"row\"><span flex=\"\"></span><md-button ng-click=\"datepicker.cancel()\" aria-label=\"{{::datepicker.labels.cancel}}\">{{::datepicker.labels.cancel}}</md-button><md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"{{::datepicker.labels.ok}}\">{{::datepicker.labels.ok}}</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpTimePicker/templates/clock.html\",'<div class=\"mdp-clock\"><div class=\"mdp-clock-container\"><md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar><md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\"><span class=\"mdp-clock-selected md-button md-raised md-primary\"></span></md-toolbar><md-button ng-class=\"{\\'md-primary\\': clock.selected == step}\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button></div></div>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpTimePicker/templates/mdp-time-picker.html\",'<md-dialog class=\"mdp-timepicker\" ng-class=\"{portrait: !$mdMedia(\\'gt-xs\\')}\"><md-dialog-content layout=\"column\" layout-gt-xs=\"row\"><md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex=\"noshrink\" class=\"mdp-timepicker-time md-primary\"><div class=\"mdp-timepicker-selected-time\"><span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span></div><div layout=\"column\" class=\"mdp-timepicker-selected-ampm\"><span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span> <span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span></div></md-toolbar><div flex=\"noshrink\"><div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout=\"\" layout-align=\"center center\"><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" auto-close=\"timepicker.autoClose\" minutes-steps=\"timepicker.minutesSteps\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" auto-close=\"timepicker.autoClose\" minutes-steps=\"timepicker.minutesSteps\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock></div><md-dialog-actions layout=\"row\"><span flex=\"\"></span><md-button ng-click=\"timepicker.cancel()\" aria-label=\"{{::timepicker.labels.cancel}}\">{{::timepicker.labels.cancel}}</md-button><md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"{{::timepicker.labels.ok}}\">{{::timepicker.labels.ok}}</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>')}])}();\n})();"],"sourceRoot":"/source/"}