{"version":3,"sources":["mdPickers.min.js"],"names":["configIcons","$mdIconProvider","mdpIconsRegistry","angular","forEach","icon","index","id","url","runBlock","$templateCache","put","svg","$inject","module","config","run","constant","ngMessage","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","directive","ClockCtrl","$scope","getPointerStyle","divider","vm","type","TYPE_HOURS","TYPE_MINUTES","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","time","format","hours","minutes","init","i","steps","push","this","STEP_DEG","CLOCK_TYPES","range","controller","TimePickerCtrl","$mdDialog","options","$mdMedia","switchView","currentView","VIEW_HOURS","VIEW_MINUTES","setAM","hour","setPM","cancel","confirm","hide","toDate","moment","labels","autoSwitch","clockHours","parseInt","clockMinutes","$mdpTimePicker","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","isDate","Date","now","isObject","ok","show","controllerAs","clickOutsideToClose","templateUrl","targetEvent","locals","skipHide","provider","CalendarCtrl","self","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","date","firstDay","day","length","arr","value","enabled","isDayEnabled","minDate","maxDate","dateFilter","selectDate","dom","nextMonth","add","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","DatePickerCtrl","$timeout","currentDate","isValid","displayFormat","isFunction","selectingYear","isBefore","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","then","mdpClock","$animate","$$rAF","linkFn","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","e","off","$on","bindToController","replace","link","mdpTimePicker","ngModel","$transclude","showPicker","ev","$modelValue","$setViewValue","$render","require","timeFormat","updateInputElement","$valid","inputElement","size","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$pristine","messages","hasClass","removeClass","onInputElementEvents","target","$viewVaue","clone","append","isDefined","disabled","hasOwnProperty","$error","setInvalid","Object","keys","$formatters","unshift","$validators","modelValue","viewValue","$parsers","parsed","originalModel","seconds","transclude","template","noFloat","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","mdpCalendar","animElements","map","a","direction","addClass","mdpDatePicker","$mdpDatePicker","mdpDatePickerService","applyValue","dateFormat","formatValidator","minDateValidator","maxDateValidator","filter","filterValidator","required","requiredValidator","postLink","updateDate","$viewValue","model","isError","$invalid","month","post","DISPLAY_FORMAT","setDisplayFormat","datePicker","isSameOrAfter","isSameOrBefore","undefined","service","factory"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n(function() {\r\n    'use strict';\r\n\r\n    configIcons.$inject = [\"$mdIconProvider\", \"mdpIconsRegistry\"];\r\n    runBlock.$inject = [\"$templateCache\", \"mdpIconsRegistry\"];\r\n    angular\r\n        .module('mdPickers', [\r\n            'ngMaterial',\r\n            'ngAnimate',\r\n            'ngAria'\r\n        ])\r\n        .config(configIcons)\r\n        .run(runBlock);\r\n\r\n    /** @ngInject */\r\n    function configIcons($mdIconProvider, mdpIconsRegistry) {\r\n        angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n            $mdIconProvider.icon(icon.id, icon.url);\r\n        });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function runBlock($templateCache, mdpIconsRegistry) {\r\n        angular.forEach(mdpIconsRegistry, function(icon, index) {\r\n            $templateCache.put(icon.url, icon.svg);\r\n        });\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .constant('mdpIconsRegistry', [{\r\n            id: 'mdp-chevron-left',\r\n            url: 'mdp-chevron-left.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }, {\r\n            id: 'mdp-chevron-right',\r\n            url: 'mdp-chevron-right.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }, {\r\n            id: 'mdp-access-time',\r\n            url: 'mdp-access-time.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n        }, {\r\n            id: 'mdp-event',\r\n            url: 'mdp-event.svg',\r\n            svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n        }]);\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    ngMessage.$inject = [\"$mdUtil\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('ngMessage', ngMessage);\r\n\r\n    /** @ngInject */\r\n    function ngMessage($mdUtil) {\r\n        return {\r\n            restrict: 'EA',\r\n            priority: 101,\r\n            compile: function(element) {\r\n                var inputContainer = $mdUtil.getClosest(element, 'mdp-time-picker', true) ||\r\n                    $mdUtil.getClosest(element, 'mdp-date-picker', true);\r\n\r\n                // If we are not a child of an input container, don't do anything\r\n                if (!inputContainer) return;\r\n\r\n                // Add our animation class\r\n                element.toggleClass('md-input-message-animation', true);\r\n\r\n                return {};\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    ClockCtrl.$inject = [\"$scope\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('ClockCtrl', ClockCtrl);\r\n\r\n    /** @ngInject */\r\n    function ClockCtrl($scope) {\r\n        var vm = this;\r\n\r\n        var TYPE_HOURS = \"hours\";\r\n        var TYPE_MINUTES = \"minutes\";\r\n\r\n        vm.STEP_DEG = 360 / 12;\r\n        vm.steps = [];\r\n        vm.CLOCK_TYPES = {\r\n            \"hours\": {\r\n                range: 12,\r\n            },\r\n            \"minutes\": {\r\n                range: 60,\r\n            }\r\n        };\r\n\r\n        vm.getPointerStyle = getPointerStyle;\r\n        vm.setTimeByDeg = setTimeByDeg;\r\n        vm.setTime = setTime;\r\n        vm.init = init;\r\n\r\n        vm.init();\r\n\r\n        function getPointerStyle() {\r\n            var divider = 1;\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    divider = 12;\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    divider = 60;\r\n                    break;\r\n            }\r\n            var degrees = Math.round(vm.selected * (360 / divider)) - 180;\r\n            return {\r\n                \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n                \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n                \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n            }\r\n        }\r\n\r\n        function setTimeByDeg(deg) {\r\n            deg = deg >= 360 ? 0 : deg;\r\n            var divider = 0;\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    divider = 12;\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    divider = 60;\r\n                    break;\r\n            }\r\n\r\n            vm.setTime(\r\n                Math.round(divider / 360 * deg)\r\n            );\r\n        }\r\n\r\n        function setTime(time, type) {\r\n            vm.selected = time;\r\n\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    if (vm.time.format(\"A\") == \"PM\") time += 12;\r\n                    vm.time.hours(time);\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    if (time > 59) time -= 60;\r\n                    vm.time.minutes(time);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function init() {\r\n            vm.type = vm.type || \"hours\";\r\n            switch (vm.type) {\r\n                case TYPE_HOURS:\r\n                    for (var i = 1; i <= 12; i++)\r\n                        vm.steps.push(i);\r\n                    vm.selected = vm.time.hours() || 0;\r\n                    if (vm.selected > 12) vm.selected -= 12;\r\n\r\n                    break;\r\n                case TYPE_MINUTES:\r\n                    for (var i = 5; i <= 55; i += 5)\r\n                        vm.steps.push(i);\r\n                    vm.steps.push(0);\r\n                    vm.selected = vm.time.minutes() || 0;\r\n\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    TimePickerCtrl.$inject = [\"$scope\", \"$mdDialog\", \"time\", \"options\", \"$mdMedia\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('TimePickerCtrl', TimePickerCtrl);\r\n\r\n    /** @ngInject */\r\n    function TimePickerCtrl($scope, $mdDialog, time, options, $mdMedia) {\r\n        var vm = this;\r\n\r\n        vm.VIEW_HOURS = 1;\r\n        vm.VIEW_MINUTES = 2;\r\n        vm.currentView = vm.VIEW_HOURS;\r\n        vm.time = moment(time);\r\n        vm.labels = options.labels;\r\n        vm.autoSwitch = !!options.autoSwitch;\r\n\r\n        vm.clockHours = parseInt(vm.time.format(\"h\"));\r\n        vm.clockMinutes = parseInt(vm.time.minutes());\r\n\r\n        vm.switchView = switchView;\r\n        vm.setAM = setAM;\r\n        vm.setPM = setPM;\r\n        vm.cancel = cancel;\r\n        vm.confirm = confirm;\r\n\r\n        $scope.$mdMedia = $mdMedia;\r\n\r\n        function switchView() {\r\n            vm.currentView = vm.currentView == vm.VIEW_HOURS ? vm.VIEW_MINUTES : vm.VIEW_HOURS;\r\n        }\r\n\r\n        function setAM() {\r\n            if (vm.time.hours() >= 12)\r\n                vm.time.hour(vm.time.hour() - 12);\r\n        }\r\n\r\n        function setPM() {\r\n            if (vm.time.hours() < 12)\r\n                vm.time.hour(vm.time.hour() + 12);\r\n        }\r\n\r\n        function cancel() {\r\n            $mdDialog.cancel();\r\n        }\r\n\r\n        function confirm() {\r\n            $mdDialog.hide(vm.time.toDate());\r\n        }\r\n    }\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .provider('$mdpTimePicker', $mdpTimePicker);\r\n\r\n    function $mdpTimePicker() {\r\n        var LABEL_OK = 'OK',\r\n            LABEL_CANCEL = 'Cancel';\r\n\r\n        this.setOKButtonLabel = function(label) {\r\n            LABEL_OK = label;\r\n        };\r\n\r\n        this.setCancelButtonLabel = function(label) {\r\n            LABEL_CANCEL = label;\r\n        };\r\n\r\n        /** @ngInject */\r\n        this.$get = [\"$mdDialog\", function($mdDialog) {\r\n            var timePicker = function(time, options) {\r\n                if (!angular.isDate(time)) time = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                options.labels = {\r\n                    cancel: LABEL_CANCEL,\r\n                    ok: LABEL_OK\r\n                };\r\n\r\n                return $mdDialog.show({\r\n                    controller: 'TimePickerCtrl',\r\n                    controllerAs: 'timepicker',\r\n                    clickOutsideToClose: true,\r\n                    templateUrl: 'mdpTimePicker/templates/mdp-time-picker.html',\r\n                    targetEvent: options.targetEvent,\r\n                    locals: {\r\n                        time: time,\r\n                        options: options\r\n                    },\r\n                    skipHide: true\r\n                });\r\n            };\r\n\r\n            return timePicker;\r\n        }];\r\n        this.$get.$inject = [\"$mdDialog\"];\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n(function () {\r\n    'use strict';\r\n\r\n    CalendarCtrl.$inject = [\"$scope\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('CalendarCtrl', CalendarCtrl);\r\n\r\n    /** @ngInject */\r\n    function CalendarCtrl($scope) {\r\n        var self = this;\r\n        this.dow = moment.localeData().firstDayOfWeek();\r\n\r\n        this.weekDays = [].concat(\r\n            moment.weekdaysMin().slice(\r\n                this.dow\r\n            ),\r\n            moment.weekdaysMin().slice(\r\n                0,\r\n                this.dow\r\n            )\r\n        );\r\n\r\n        this.daysInMonth = [];\r\n\r\n        this.getDaysInMonth = function() {\r\n            var days = self.date.daysInMonth(),\r\n                firstDay = moment(self.date).date(1).day() - this.dow;\r\n\r\n            if (firstDay < 0) firstDay = this.weekDays.length - 1;\r\n\r\n\r\n            var arr = [];\r\n            for (var i = 1; i <= (firstDay + days); i++) {\r\n                var day = null;\r\n                if (i > firstDay) {\r\n                    day = {\r\n                        value: (i - firstDay),\r\n                        enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                    };\r\n                }\r\n                arr.push(day);\r\n            }\r\n\r\n            return arr;\r\n        };\r\n\r\n        this.isDayEnabled = function(day) {\r\n            return (!this.minDate || this.minDate <= day) &&\r\n                (!this.maxDate || this.maxDate >= day) &&\r\n                (!self.dateFilter || !self.dateFilter(day));\r\n        };\r\n\r\n        this.selectDate = function(dom) {\r\n            self.date.date(dom);\r\n        };\r\n\r\n        this.nextMonth = function() {\r\n            self.date.add(1, 'months');\r\n        };\r\n\r\n        this.prevMonth = function() {\r\n            self.date.subtract(1, 'months');\r\n        };\r\n\r\n        this.updateDaysInMonth = function() {\r\n            self.daysInMonth = self.getDaysInMonth();\r\n        };\r\n\r\n        $scope.$watch(function() {\r\n            return self.date.unix() }, function(newValue, oldValue) {\r\n            if (newValue && newValue !== oldValue)\r\n                self.updateDaysInMonth();\r\n        })\r\n\r\n        self.updateDaysInMonth();\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n(function() {\r\n    'use strict';\r\n\r\n    DatePickerCtrl.$inject = [\"$scope\", \"$mdDialog\", \"$mdMedia\", \"$timeout\", \"currentDate\", \"options\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .controller('DatePickerCtrl', DatePickerCtrl);\r\n\r\n    /** @ngInject */\r\n    function DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n        var self = this;\r\n\r\n        this.date = moment(currentDate);\r\n        this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n        this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n        this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n        this.labels = options.labels;\r\n        this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n        this.selectingYear = false;\r\n\r\n        // validate min and max date\r\n        if (this.minDate && this.maxDate) {\r\n            if (this.maxDate.isBefore(this.minDate)) {\r\n                this.maxDate = moment(this.minDate).add(1, 'days');\r\n            }\r\n        }\r\n\r\n        if (this.date) {\r\n            // check min date\r\n            if (this.minDate && this.date.isBefore(this.minDate)) {\r\n                this.date = moment(this.minDate);\r\n            }\r\n\r\n            // check max date\r\n            if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n                this.date = moment(this.maxDate);\r\n            }\r\n        }\r\n\r\n        this.yearItems = {\r\n            currentIndex_: 0,\r\n            PAGE_SIZE: 5,\r\n            START: (self.minDate ? self.minDate.year() : 1900),\r\n            END: (self.maxDate ? self.maxDate.year() : 0),\r\n            getItemAtIndex: function(index) {\r\n                if (this.currentIndex_ < index)\r\n                    this.currentIndex_ = index;\r\n\r\n                return this.START + index;\r\n            },\r\n            getLength: function() {\r\n                return Math.min(\r\n                    this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                    Math.abs(this.START - this.END) + 1\r\n                );\r\n            }\r\n        };\r\n\r\n        $scope.$mdMedia = $mdMedia;\r\n        $scope.year = this.date.year();\r\n\r\n        this.selectYear = function(year) {\r\n            self.date.year(year);\r\n            $scope.year = year;\r\n            self.selectingYear = false;\r\n            self.animate();\r\n        };\r\n\r\n        this.showYear = function() {\r\n            self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n            self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n            self.selectingYear = true;\r\n        };\r\n\r\n        this.showCalendar = function() {\r\n            self.selectingYear = false;\r\n        };\r\n\r\n        this.cancel = function() {\r\n            $mdDialog.cancel();\r\n        };\r\n\r\n        this.confirm = function() {\r\n            var date = this.date;\r\n\r\n            if (this.minDate && this.date.isBefore(this.minDate)) {\r\n                date = moment(this.minDate);\r\n            }\r\n\r\n            if (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n                date = moment(this.maxDate);\r\n            }\r\n\r\n            $mdDialog.hide(date.toDate());\r\n        };\r\n\r\n        this.animate = function() {\r\n            self.animating = true;\r\n            $timeout(angular.noop).then(function() {\r\n                self.animating = false;\r\n            })\r\n        };\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpClock.$inject = [\"$animate\", \"$timeout\", \"$$rAF\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpClock', mdpClock);\r\n\r\n    /** @ngInject */\r\n    function mdpClock($animate, $timeout, $$rAF) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            bindToController: {\r\n                'type': '@?',\r\n                'time': '=',\r\n                'autoSwitch': '=?'\r\n            },\r\n            replace: true,\r\n            templateUrl: 'mdpTimePicker/templates/clock.html',\r\n            controller: 'ClockCtrl',\r\n            controllerAs: 'clock',\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ctrl) {\r\n            var pointer = angular.element(element[0].querySelector('.mdp-pointer')),\r\n                timepickerCtrl = scope.$parent.timepicker;\r\n\r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $$rAF(function() {\r\n                    $timeout(function() {\r\n                        ctrl.setTimeByDeg(deg + 180);\r\n                        if (ctrl.autoSwitch && ['mouseup', 'click'].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\r\n                    });\r\n                });\r\n            };\r\n\r\n            element.on('mousedown', function() {\r\n                element.on('mousemove', onEvent);\r\n            });\r\n\r\n            element.on('mouseup', function(e) {\r\n                element.off('mousemove', onEvent);\r\n            });\r\n\r\n            element.on('click', onEvent);\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', onEvent);\r\n                element.off('mousemove', onEvent);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpTimePicker.$inject = [\"$mdpTimePicker\", \"$timeout\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpTimePicker', mdpTimePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpTimePicker($mdpTimePicker, $timeout) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                'timeFormat': '@mdpFormat',\r\n                'autoSwitch': '=?mdpAutoSwitch',\r\n            },\r\n            link: linkFn\r\n        }\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            scope.format = scope.format || \"HH:mm\";\r\n\r\n            function showPicker(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n\r\n            element.on('click', showPicker);\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', showPicker);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpTimePicker.$inject = [\"$mdpTimePicker\", \"$timeout\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpTimePicker', mdpTimePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpTimePicker($mdpTimePicker, $timeout) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            require: 'ngModel',\r\n            transclude: true,\r\n            template: function(element, attrs) {\r\n                var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                    placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                    openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n                return '<div layout layout-align=\"start start\">' +\r\n                            '<md-button ng-disabled=\"disabled\" class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                                '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\r\n                            '</md-button>' +\r\n                            '<md-input-container flex' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                                '<input ng-disabled=\"disabled\" type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                            '</md-input-container>' +\r\n                        '</div>';\r\n            },\r\n            scope: {\r\n                'timeFormat': '@mdpFormat',\r\n                'placeholder': '@mdpPlaceholder',\r\n                'autoSwitch': '=?mdpAutoSwitch',\r\n                'disabled': '=?mdpDisabled'\r\n            },\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller('mdInputContainer');\r\n\r\n            $transclude(function(clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector('[ng-messages]'));\r\n\r\n            scope.type = scope.timeFormat ? 'text' : 'time';\r\n            scope.timeFormat = scope.timeFormat || 'HH:mm';\r\n            scope.autoSwitch = scope.autoSwitch || false;\r\n\r\n            if (!angular.isDefined(scope.disabled)) {\r\n                scope.disabled = attrs.hasOwnProperty('mdpDisabled');\r\n            }\r\n\r\n            scope.$watch(function() {\r\n                return ngModel.$error;\r\n            }, function(newValue, oldValue) {\r\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n            }, true);\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var time = angular.isDate(value) && moment(value);\r\n                if (time && time.isValid())\r\n                    updateInputElement(time.format(scope.timeFormat));\r\n            });\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.timeFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.minutes(parsed.minutes());\r\n                        originalModel.hours(parsed.hours());\r\n                        originalModel.seconds(parsed.seconds());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if (ngModel.$valid)\r\n                    inputElement[0].size = value.length + 1;\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateTime(time) {\r\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\r\n                    strValue = value.format(scope.timeFormat);\r\n\r\n                if (value.isValid()) {\r\n                    updateInputElement(strValue);\r\n                    ngModel.$setViewValue(strValue);\r\n                } else {\r\n                    updateInputElement(time);\r\n                    ngModel.$setViewValue(time);\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass('md-auto-hide') &&\r\n                    inputContainer.hasClass('md-input-invalid')) messages.removeClass('md-auto-hide');\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function(time) {\r\n                    updateTime(time, true);\r\n                });\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewVaue)\r\n                    updateTime(event.target.value);\r\n            }\r\n\r\n            inputElement.on('reset input blur', onInputElementEvents);\r\n\r\n            scope.$on('$destroy', function() {\r\n                inputElement.off('reset input blur', onInputElementEvents);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n/* global moment, angular */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    mdpCalendar.$inject = [\"$animate\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpCalendar', mdpCalendar);\r\n\r\n    /** @ngInject */\r\n    function mdpCalendar($animate) {\r\n        var directive = {\r\n            restrict: 'E',\r\n            bindToController: {\r\n                'date': '=',\r\n                'minDate': '=',\r\n                'maxDate': '=',\r\n                'dateFilter': '='\r\n            },\r\n            templateUrl: 'mdpDatePicker/templates/mdp-date-picker-calendar.html',\r\n            controller: 'CalendarCtrl',\r\n            controllerAs: 'calendar',\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector('.mdp-calendar-week-days'),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function(a) {\r\n                return angular.element(a);\r\n            });\r\n\r\n            scope.$watch(function() {\r\n                return ctrl.date.format('YYYYMM')\r\n            }, function(newValue, oldValue) {\r\n                var direction = null;\r\n\r\n                if (newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if (newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n\r\n                if (direction) {\r\n                    for (var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    mdpDatePicker.$inject = [\"$mdpDatePicker\", \"$timeout\", \"mdpDatePickerService\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive(\"mdpDatePicker\", mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePicker($mdpDatePicker, $timeout, mdpDatePickerService) {\r\n        var directive = {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            scope: {\r\n                \"minDate\": \"@min\",\r\n                \"maxDate\": \"@max\",\r\n                \"dateFilter\": \"=mdpDateFilter\",\r\n                \"dateFormat\": \"@mdpFormat\",\r\n            },\r\n            link: linkFn\r\n        };\r\n\r\n        return directive;\r\n\r\n        function linkFn(scope, element, attrs, ngModel, $transclude) {\r\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n\r\n            scope.$watch(function () {\r\n                return ngModel.$modelValue;\r\n            }, applyValue);\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.formatValidator(viewValue, scope.format);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.minDateValidator(viewValue, scope.format, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.maxDateValidator(viewValue, scope.format, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.filterValidator(viewValue, scope.format, scope.dateFilter);\r\n            };\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.requiredValidator(viewValue);\r\n            };\r\n\r\n            function showPicker(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(applyValue);\r\n            }\r\n\r\n            function applyValue (value) {\r\n                ngModel.$setViewValue(value ? moment(value).format(scope.format) : '');\r\n                ngModel.$render();\r\n            }\r\n\r\n            element.on('click', showPicker);\r\n\r\n            scope.$on('$destroy', function() {\r\n                element.off('click', showPicker);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n\r\n    mdpDatePicker.$inject = [\"$mdpDatePicker\", \"$timeout\", \"mdpDatePickerService\"];\r\n    angular\r\n        .module('mdPickers')\r\n        .directive('mdpDatePicker', mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePicker($mdpDatePicker, $timeout, mdpDatePickerService) {\r\n\r\n        var directive = {\r\n            restrict: 'E',\r\n            require: 'ngModel',\r\n            transclude: true,\r\n            template: function(element, attrs) {\r\n                var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                    placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                    openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n\r\n                return '<div layout layout-align=\"start start\">' +\r\n                            '<md-button ng-disabled=\"disabled\" class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                                '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\r\n                            '</md-button>' +\r\n                            '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\" flex>' +\r\n                                '<input ng-disabled=\"disabled\" type=\"{{ type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                            '</md-input-container>' +\r\n                        '</div>';\r\n            },\r\n            scope: {\r\n                'minDate': '=mdpMinDate',\r\n                'maxDate': '=mdpMaxDate',\r\n                'dateFilter': '=mdpDateFilter',\r\n                'dateFormat': '@mdpFormat',\r\n                'placeholder': '@mdpPlaceholder',\r\n                'noFloat': '=mdpNoFloat',\r\n                'openOnClick': '=mdpOpenOnClick',\r\n                'disabled': '=?mdpDisabled'\r\n            },\r\n            link: {\r\n                post: postLink\r\n            }\r\n        };\r\n\r\n        return directive;\r\n\r\n        function postLink(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller('mdInputContainer');\r\n\r\n            $transclude(function(clone) {\r\n                inputContainer.append(clone);\r\n            });\r\n\r\n            var messages = angular.element(inputContainer[0].querySelector('[ng-messages]'));\r\n\r\n            scope.type = scope.dateFormat ? 'text' : 'date';\r\n            scope.dateFormat = scope.dateFormat || 'YYYY-MM-DD';\r\n            scope.model = ngModel;\r\n\r\n            scope.$watch(function () {\r\n                return ngModel.$modelValue;\r\n            }, updateDate);\r\n\r\n            if (!angular.isDefined(scope.disabled)) {\r\n                scope.disabled = attrs.hasOwnProperty('mdpDisabled');\r\n            }\r\n\r\n            scope.isError = function() {\r\n                return !ngModel.$pristine && !!ngModel.$invalid;\r\n            };\r\n\r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var date = angular.isDate(value) && moment(value);\r\n                if (date && date.isValid()) {\r\n                    updateInputElement(date.format(scope.dateFormat));\r\n                }\r\n            });\r\n\r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.formatValidator(viewValue, scope.dateFormat);\r\n            };\r\n\r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.minDateValidator(viewValue, scope.dateFormat, scope.minDate);\r\n            };\r\n\r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\r\n            };\r\n\r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\r\n            };\r\n\r\n            ngModel.$validators.required = function(modelValue, viewValue) {\r\n                return mdpDatePickerService.requiredValidator(viewValue);\r\n            };\r\n\r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.dateFormat, true);\r\n                if (parsed.isValid()) {\r\n                    if (angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.year(parsed.year());\r\n                        originalModel.month(parsed.month());\r\n                        originalModel.date(parsed.date());\r\n\r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate();\r\n                } else {\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n                }\r\n            });\r\n\r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if (ngModel.$valid && value && value.length) {\r\n                    inputElement[0].size = value.length + 1;\r\n                }\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n\r\n            function updateDate(date) {\r\n                if (date) {\r\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\r\n                        strValue = value.format(scope.dateFormat);\r\n\r\n                    if (value.isValid()) {\r\n                        updateInputElement(strValue);\r\n                        ngModel.$setViewValue(strValue);\r\n                    } else {\r\n                        updateInputElement(date);\r\n                        ngModel.$setViewValue(date);\r\n                    }\r\n                } else {\r\n                    ngModel.$setViewValue('');\r\n                }\r\n\r\n                if (!ngModel.$pristine &&\r\n                    messages.hasClass('md-auto-hide') &&\r\n                    inputContainer.hasClass('md-input-invalid')) messages.removeClass('md-auto-hide');\r\n\r\n                ngModel.$render();\r\n            }\r\n\r\n            scope.showPicker = function(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n                    minDate: scope.minDate,\r\n                    maxDate: scope.maxDate,\r\n                    dateFilter: scope.dateFilter,\r\n                    targetEvent: ev\r\n                }).then(updateDate);\r\n            };\r\n\r\n            function onInputElementEvents(event) {\r\n                if (event.target.value !== ngModel.$viewValue) {\r\n                    updateDate(event.target.value);\r\n                }\r\n            }\r\n\r\n            inputElement.on('reset input blur', onInputElementEvents);\r\n\r\n            scope.$on('$destroy', function() {\r\n                inputElement.off('reset input blur', onInputElementEvents);\r\n            });\r\n        }\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .provider(\"$mdpDatePicker\", $mdpDatePicker);\r\n\r\n    /** @ngInject */\r\n    function $mdpDatePicker() {\r\n        var LABEL_OK = 'OK',\r\n            LABEL_CANCEL = 'Cancel',\r\n            DISPLAY_FORMAT = 'ddd, MMM DD';\r\n\r\n        this.setDisplayFormat = function(format) {\r\n            DISPLAY_FORMAT = format;\r\n        };\r\n\r\n        this.setOKButtonLabel = function(label) {\r\n            LABEL_OK = label;\r\n        };\r\n\r\n        this.setCancelButtonLabel = function(label) {\r\n            LABEL_CANCEL = label;\r\n        };\r\n\r\n        /** @ngInject */\r\n        this.$get = [\"$mdDialog\", function($mdDialog) {\r\n            var datePicker = function(currentDate, options) {\r\n                if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n                if (!angular.isObject(options)) options = {};\r\n\r\n                options.displayFormat = DISPLAY_FORMAT;\r\n                options.labels = {\r\n                    cancel: LABEL_CANCEL,\r\n                    ok: LABEL_OK\r\n                };\r\n\r\n                return $mdDialog.show({\r\n                    controller: 'DatePickerCtrl',\r\n                    controllerAs: 'datepicker',\r\n                    clickOutsideToClose: true,\r\n                    templateUrl: 'mdpDatePicker/templates/mdp-date-picker.html',\r\n                    targetEvent: options.targetEvent,\r\n                    locals: {\r\n                        currentDate: currentDate,\r\n                        options: options\r\n                    },\r\n                    skipHide: true\r\n                });\r\n            };\r\n\r\n            return datePicker;\r\n        }];\r\n        this.$get.$inject = [\"$mdDialog\"];\r\n    }\r\n\r\n})();\r\n\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('mdPickers')\r\n        .factory('mdpDatePickerService', mdpDatePickerService);\r\n\r\n    /** @ngInject */\r\n    function mdpDatePickerService() {\r\n\r\n        var service = {\r\n            formatValidator: formatValidator,\r\n            minDateValidator: minDateValidator,\r\n            maxDateValidator: maxDateValidator,\r\n            filterValidator: filterValidator,\r\n            requiredValidator: requiredValidator\r\n        };\r\n\r\n        return service;\r\n\r\n        function formatValidator(value, format) {\r\n            return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n        }\r\n\r\n        function minDateValidator(value, format, minDate) {\r\n            minDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !minDate.isValid() ||\r\n                date.isSameOrAfter(minDate);\r\n        }\r\n\r\n        function maxDateValidator(value, format, maxDate) {\r\n            maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !maxDate.isValid() ||\r\n                date.isSameOrBefore(maxDate);\r\n        }\r\n\r\n        function filterValidator(value, format, filter) {\r\n            var date = angular.isDate(value) ? moment(value) : moment(value, format, true);\r\n\r\n            return !value ||\r\n                angular.isDate(value) ||\r\n                !angular.isFunction(filter) ||\r\n                !filter(date);\r\n        }\r\n\r\n        function requiredValidator(value) {\r\n            return !(value === undefined || value === null || value === '');\r\n        }\r\n\r\n    }\r\n})();\r\n\n!function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpDatePicker/templates/mdp-date-picker-calendar.html\",'<div class=\"mdp-calendar\"><div layout=\"row\" layout-align=\"space-between center\"><md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button><div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div><md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button></div><div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\"><div layout=\"\" layout-align=\"center center\" ng-repeat=\"d in ::calendar.weekDays track by $index\">{{ ::d }}</div></div><div layout=\"row\" layout-align=\"start center\" layout-wrap=\"\" class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\"><div layout=\"\" layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\"><md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button></div><div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end=\"\"></div></div></div>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpDatePicker/templates/mdp-date-picker.html\",'<md-dialog class=\"mdp-datepicker\" ng-class=\"{portrait: !$mdMedia(\\'gt-xs\\')}\"><md-dialog-content layout=\"row\" layout-wrap=\"\"><div layout=\"column\" layout-align=\"start center\"><md-toolbar layout-align=\"start start\" flex=\"noshrink\" class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\"><span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{active: datepicker.selectingYear}\">{{ datepicker.date.format(\\'YYYY\\') }}</span> <span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{active: !datepicker.selectingYear}\">{{ datepicker.date.format(datepicker.displayFormat) }}</span></md-toolbar></div><div><div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\"><md-virtual-repeat-container md-auto-shrink=\"\" md-top-index=\"datepicker.yearTopIndex\"><div flex=\"\" md-virtual-repeat=\"item in ::datepicker.yearItems\" md-on-demand=\"\" class=\"repeated-year\"><span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple=\"\" ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span></div></md-virtual-repeat-container></div><mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar><md-dialog-actions layout=\"row\"><span flex=\"\"></span><md-button ng-click=\"datepicker.cancel()\" aria-label=\"{{::datepicker.labels.cancel}}\">{{::datepicker.labels.cancel}}</md-button><md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"{{::datepicker.labels.ok}}\">{{::datepicker.labels.ok}}</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpTimePicker/templates/clock.html\",'<div class=\"mdp-clock\"><div class=\"mdp-clock-container\"><md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar><md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\"><span class=\"mdp-clock-selected md-button md-raised md-primary\"></span></md-toolbar><md-button ng-class=\"{\\'md-primary\\': clock.selected == step}\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button></div></div>')}])}(),function(e){try{e=angular.module(\"mdPickers\")}catch(a){e=angular.module(\"mdPickers\",[])}e.run([\"$templateCache\",function(e){e.put(\"mdpTimePicker/templates/mdp-time-picker.html\",'<md-dialog class=\"mdp-timepicker\" ng-class=\"{portrait: !$mdMedia(\\'gt-xs\\')}\"><md-dialog-content layout=\"column\" layout-gt-xs=\"row\"><md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex=\"noshrink\" class=\"mdp-timepicker-time md-hue-1 md-primary\"><div class=\"mdp-timepicker-selected-time\"><span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span></div><div layout=\"column\" class=\"mdp-timepicker-selected-ampm\"><span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span> <span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span></div></md-toolbar><div flex=\"noshrink\"><div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout=\"\" layout-align=\"center center\"><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock><mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock></div><md-dialog-actions layout=\"row\"><span flex=\"\"></span><md-button ng-click=\"timepicker.cancel()\" aria-label=\"{{::timepicker.labels.cancel}}\">{{::timepicker.labels.cancel}}</md-button><md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"{{::timepicker.labels.ok}}\">{{::timepicker.labels.ok}}</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>')}])}();\n})();"],"sourceRoot":"/source/"}